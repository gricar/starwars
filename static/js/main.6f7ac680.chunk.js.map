{"version":3,"sources":["context/Context.js","component/FilterByColumns.jsx","component/FilterByName.jsx","component/FilterHeader.jsx","component/OrderColumn.jsx","pages/Filters.jsx","component/Table.jsx","services/fetchPlanets.js","context/Provider.js","App.js","index.js"],"names":["Context","createContext","FilterByColumns","useContext","filterByNumericValues","setFilterByNumericValues","useState","column","comparison","value","filterDropdowns","setFilterDropdowns","handleFilterChange","target","name","htmlFor","data-testid","id","onChange","type","onClick","allOptions","document","querySelector","options","Array","from","forEach","option","remove","disableFilterOption","FilterByName","data","setFilteredPlanetsList","setHasFilter","filterByName","setFilterByName","useEffect","filteredPlanets","filter","includes","FilterHeader","createFilterOption","columnName","select","createElement","innerHTML","appendChild","map","filterObj","index","key","arrFilters","obj","removeFilter","OrderColumn","order","setOrder","filteredPlanetsList","handleOrderChange","sort","orderedList","planetA","planetB","Filters","Table","hasFilter","renderTable","planets","planet","rotationPeriod","rotation_period","orbitalPeriod","orbital_period","diameter","climate","gravity","terrain","surfaceWater","surface_water","population","films","created","edited","url","length","Object","keys","fetchPlanets","a","fetch","response","json","results","message","Provider","children","setData","getPlanets","Number","context","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6f7ac680.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst Context = createContext();\n\nexport default Context;\n","import React, { useContext, useState } from 'react';\nimport Context from '../context/Context';\n\nfunction FilterByColumns() {\n  const { filterByNumericValues, setFilterByNumericValues } = useContext(Context);\n\n  const [filterDropdowns, setFilterDropdowns] = useState({\n    column: 'population',\n    comparison: 'maior que',\n    value: 0,\n  });\n\n  const handleFilterChange = ({ target: { name, value } }) => {\n    setFilterDropdowns({\n      ...filterDropdowns,\n      [name]: value,\n    });\n  };\n\n  const disableFilterOption = () => {\n    const allOptions = document.querySelector('#column').options;\n    const arrAllOptions = Array.from(allOptions);\n    arrAllOptions.forEach((option) => {\n      if (option.value === filterDropdowns.column) {\n        option.remove();\n      }\n    });\n  };\n\n  const handleSubmitFilter = () => {\n    setFilterByNumericValues([...filterByNumericValues, filterDropdowns]);\n    disableFilterOption();\n  };\n\n  return (\n    <form>\n      <label htmlFor=\"column\">\n        Colunas\n        <select\n          data-testid=\"column-filter\"\n          name=\"column\"\n          id=\"column\"\n          value={ filterDropdowns.column }\n          onChange={ handleFilterChange }\n        >\n          <option value=\"population\">population</option>\n          <option value=\"orbital_period\">orbital_period</option>\n          <option value=\"diameter\">diameter</option>\n          <option value=\"rotation_period\">rotation_period</option>\n          <option value=\"surface_water\">surface_water</option>\n        </select>\n      </label>\n      <label htmlFor=\"comparison\">\n        Operador\n        <select\n          data-testid=\"comparison-filter\"\n          name=\"comparison\"\n          id=\"comparison\"\n          value={ filterDropdowns.comparison }\n          onChange={ handleFilterChange }\n        >\n          <option value=\"maior que\">maior que</option>\n          <option value=\"menor que\">menor que</option>\n          <option value=\"igual a\">igual a</option>\n        </select>\n      </label>\n      <input\n        data-testid=\"value-filter\"\n        type=\"number\"\n        name=\"value\"\n        value={ filterDropdowns.value }\n        onChange={ handleFilterChange }\n      />\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ handleSubmitFilter }\n      >\n        Filtrar\n      </button>\n    </form>\n  );\n}\n\nexport default FilterByColumns;\n","import React, { useContext, useEffect, useState } from 'react';\nimport Context from '../context/Context';\n\nfunction FilterByName() {\n  const { data, setFilteredPlanetsList, setHasFilter } = useContext(Context);\n\n  const [filterByName, setFilterByName] = useState({ name: '' });\n\n  const handleFilterByName = ({ target }) => setFilterByName({ name: target.value });\n\n  // didUpdate -> salva um novo array filtrados pelo nome\n  useEffect(() => {\n    const filteredPlanets = data.filter(({ name }) => name.includes(filterByName.name));\n    setFilteredPlanetsList(filteredPlanets);\n    if (filterByName.name) {\n      setHasFilter(true);\n    } else {\n      setHasFilter(false);\n    }\n  }, [filterByName.name, data, setFilteredPlanetsList, setHasFilter]);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        data-testid=\"name-filter\"\n        value={ filterByName.name }\n        onChange={ handleFilterByName }\n      />\n    </div>\n  );\n}\n\nexport default FilterByName;\n","import React, { useContext } from 'react';\nimport Context from '../context/Context';\n\nfunction FilterHeader() {\n  const {\n    data, filterByNumericValues, setFilterByNumericValues, setFilteredPlanetsList,\n  } = useContext(Context);\n\n  const createFilterOption = (columnName) => {\n    const select = document.querySelector('#column');\n    const option = document.createElement('option');\n    option.value = columnName;\n    option.innerHTML = columnName;\n    select.appendChild(option);\n  };\n\n  const removeFilter = (filterObj) => {\n    const arrFilters = filterByNumericValues.filter((obj) => obj !== filterObj);\n    setFilteredPlanetsList(data);\n    setFilterByNumericValues(arrFilters);\n    createFilterOption(filterObj.column);\n  };\n\n  const removeAllFilters = () => {\n    setFilteredPlanetsList(data);\n    setFilterByNumericValues([]);\n    filterByNumericValues.forEach((filterObj) => createFilterOption(filterObj.column));\n  };\n\n  return (\n    <div>\n      {\n        filterByNumericValues.map((filterObj, index) => {\n          const { column, comparison, value } = filterObj;\n          return (\n            <div key={ index } data-testid=\"filter\">\n              <p>{`${column} ${comparison} ${value}` }</p>\n              <button type=\"button\" onClick={ () => removeFilter(filterObj) }>\n                X\n              </button>\n            </div>\n          );\n        })\n      }\n      <button\n        type=\"button\"\n        data-testid=\"button-remove-filters\"\n        onClick={ removeAllFilters }\n      >\n        Remover filtros\n      </button>\n    </div>\n  );\n}\n\nexport default FilterHeader;\n","import React, { useContext, useEffect } from 'react';\nimport Context from '../context/Context';\n\nfunction OrderColumn() {\n  const {\n    order, setOrder, filteredPlanetsList, setFilteredPlanetsList, setHasFilter,\n  } = useContext(Context);\n\n  const handleOrderChange = ({ target: { name, value } }) => {\n    setOrder({\n      ...order,\n      [name]: value,\n    });\n  };\n\n  const handleSubmitOrder = () => {\n    const { column, sort } = order;\n    if (sort === 'ASC') {\n      const orderedList = filteredPlanetsList\n        .sort((planetA, planetB) => planetB[column] - planetA[column]);\n      setFilteredPlanetsList(orderedList);\n      setHasFilter(true);\n    } else if (sort === 'DESC') {\n      const orderedList = filteredPlanetsList\n        .sort((planetA, planetB) => planetA[column] - planetB[column]);\n      setFilteredPlanetsList(orderedList);\n      setHasFilter(true);\n    }\n  };\n\n  useEffect(() => {\n\n  }, []);\n\n  return (\n    <form>\n      <label htmlFor=\"column\">\n        Ordenar\n        <select\n          data-testid=\"column-sort\"\n          name=\"column\"\n          id=\"column\"\n          value={ order.column }\n          onChange={ handleOrderChange }\n        >\n          <option value=\"population\">population</option>\n          <option value=\"orbital_period\">orbital_period</option>\n          <option value=\"diameter\">diameter</option>\n          <option value=\"rotation_period\">rotation_period</option>\n          <option value=\"surface_water\">surface_water</option>\n        </select>\n      </label>\n      <label htmlFor=\"ASC\">\n        <input\n          data-testid=\"column-sort-input-asc\"\n          type=\"radio\"\n          name=\"sort\"\n          id=\"ASC\"\n          value=\"ASC\"\n          onChange={ handleOrderChange }\n        />\n        Ascendente\n      </label>\n      <label htmlFor=\"DESC\">\n        <input\n          data-testid=\"column-sort-input-desc\"\n          type=\"radio\"\n          name=\"sort\"\n          id=\"DESC\"\n          value=\"DESC\"\n          onChange={ handleOrderChange }\n        />\n        Descendente\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"column-sort-button\"\n        onClick={ handleSubmitOrder }\n      >\n        Ordenar\n      </button>\n    </form>\n  );\n}\n\nexport default OrderColumn;\n","import React from 'react';\nimport FilterByColumns from '../component/FilterByColumns';\nimport FilterByName from '../component/FilterByName';\nimport FilterHeader from '../component/FilterHeader';\nimport OrderColumn from '../component/OrderColumn';\n\nfunction Filters() {\n  return (\n    <div>\n      <FilterByName />\n      <FilterByColumns />\n      <FilterHeader />\n      <OrderColumn />\n    </div>\n  );\n}\n\nexport default Filters;\n","import React, { useContext } from 'react';\nimport Context from '../context/Context';\n\nfunction Table() {\n  const { data, filteredPlanetsList, hasFilter } = useContext(Context);\n\n  const renderTableHeader = () => {\n    const tableHeader = Object.keys(data[0]).filter((column) => column !== 'residents');\n    return (\n      tableHeader.map((columnName, index) => <th key={ index }>{columnName}</th>)\n    );\n  };\n\n  const renderTable = (planets) => (\n    planets.map((planet, index) => {\n      const {\n        name, rotation_period: rotationPeriod, orbital_period: orbitalPeriod,\n        diameter, climate, gravity, terrain, surface_water: surfaceWater,\n        population, films, created, edited, url,\n      } = planet;\n      return (\n        <tr key={ index }>\n          <td>{name}</td>\n          <td>{rotationPeriod}</td>\n          <td>{orbitalPeriod}</td>\n          <td>{diameter}</td>\n          <td>{climate}</td>\n          <td>{gravity}</td>\n          <td>{terrain}</td>\n          <td>{surfaceWater}</td>\n          <td>{population}</td>\n          <td>{films}</td>\n          <td>{created}</td>\n          <td>{edited}</td>\n          <td>{url}</td>\n        </tr>\n      );\n    })\n  );\n\n  return (\n    <div>\n      <table>\n        <caption>Starwars planets</caption>\n        <thead>\n          <tr>\n            {\n              data.length && renderTableHeader()\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            !hasFilter ? renderTable(data) : renderTable(filteredPlanetsList)\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","const URL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\nconst fetchPlanets = async () => {\n  try {\n    const response = await fetch(URL);\n    const { results } = await response.json();\n    return results;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport default fetchPlanets;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './Context';\nimport fetchPlanets from '../services/fetchPlanets';\n\nfunction Provider({ children }) {\n  const [data, setData] = useState([]);\n  const [filteredPlanetsList, setFilteredPlanetsList] = useState([]);\n  const [hasFilter, setHasFilter] = useState(false);\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [order, setOrder] = useState({\n    column: 'population',\n    sort: 'ASC',\n  });\n\n  // didMount -> invoca API\n  useEffect(() => {\n    const getPlanets = async () => {\n      const results = await fetchPlanets();\n      /* const sortedData = results.sort((planetA, planetB) => planetA.name - planetB.name);\n      setData(sortedData); */\n      setData(results);\n    };\n    getPlanets();\n  }, [setData]);\n\n  // didUpdate -> atualiza o array de planetas filtrados pelo usuário\n  useEffect(() => {\n    filterByNumericValues.forEach((filterObj) => {\n      const { column, comparison, value } = filterObj;\n      switch (comparison) {\n      case 'maior que':\n        setFilteredPlanetsList(filteredPlanetsList\n          .filter((planet) => Number(planet[column]) > Number(value)));\n        setHasFilter(true);\n        break;\n      case 'menor que':\n        setFilteredPlanetsList(filteredPlanetsList\n          .filter((planet) => Number(planet[column]) < Number(value)));\n        setHasFilter(true);\n        break;\n      case 'igual a':\n        setFilteredPlanetsList(filteredPlanetsList\n          .filter((planet) => Number(planet[column]) === Number(value)));\n        setHasFilter(true);\n        break;\n      default:\n        setHasFilter(false);\n      }\n    });\n  }, [filterByNumericValues]);\n\n  const context = {\n    data,\n    setData,\n    filteredPlanetsList,\n    setFilteredPlanetsList,\n    hasFilter,\n    setHasFilter,\n    filterByNumericValues,\n    setFilterByNumericValues,\n    order,\n    setOrder,\n  };\n\n  return (\n    <Context.Provider value={ context }>\n      { children }\n    </Context.Provider>\n  );\n}\n\nexport default Provider;\n\nProvider.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n","import React from 'react';\nimport Filters from './pages/Filters';\nimport Table from './component/Table';\nimport Provider from './context/Provider';\n\nfunction App() {\n  return (\n    <Provider>\n      <Filters />\n      <Table />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}